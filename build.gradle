buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'net.researchgate:gradle-release:2.4.0'
  }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'net.researchgate.release'

group 'ro.szzsa.livescore'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
  maven {
    url "http://nexus2-szzs.rhcloud.com/content/repositories/releases"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = "3.1"
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

dependencies {
  compile 'ro.szzsa.livescore:livescore-administration-api:1.0'
  compile 'ro.szzsa.livescore:livescore-management-api:1.0:'
  compile 'ro.szzsa.livescore:livescore-device-api:1.0'
  compile 'ro.szzsa.utils:converter:1.0'
  compile 'ro.szzsa.utils:httpconnector:1.0'
  compile 'javax.servlet:javax.servlet-api:3.1.0'
  compile 'org.springframework:spring-webmvc:4.3.2.RELEASE'
  compile 'org.springframework:spring-context-support:4.3.2.RELEASE'
  compile 'org.springframework:spring-jdbc:4.3.2.RELEASE'
  compile 'org.springframework.data:spring-data-jpa:1.10.2.RELEASE'
  compile 'javax.persistence:persistence-api:1.0.2'
  compile 'org.hibernate:hibernate-entitymanager:4.3.11.Final'
  compile 'org.springframework.security:spring-security-config:4.1.3.RELEASE'
  compile 'org.springframework.security:spring-security-web:4.1.3.RELEASE'
  compile 'log4j:log4j:1.2.17'
  compile 'mysql:mysql-connector-java:6.0.3'
  compile 'org.apache.commons:commons-lang3:3.4'
  testCompile 'junit:junit:4.12'
}

war.archiveName "ROOT.war"

def nexusUrl = project.hasProperty('nexusUrl') ? nexusUrl : ''
def nexusUsername = project.hasProperty('nexusUsername') ? nexusUsername : ''
def nexusPassword = project.hasProperty('nexusPassword') ? nexusPassword : ''

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "${nexusUrl}/content/repositories/releases") {
        authentication(userName: nexusUsername, password: nexusPassword)
      }
      snapshotRepository(url: "${nexusUrl}/content/repositories/snapshots") {
        authentication(userName: nexusUsername, password: nexusPassword)
      }
    }
  }
}

release {
  failOnUnversionedFiles = false
  failOnCommitNeeded = false
}
