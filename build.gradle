buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'net.researchgate:gradle-release:' + releasePluginVersion
  }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'net.researchgate.release'

group 'ro.szzsa.livescore'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  jcenter()
  maven {
    url "http://nexus2-szzs.rhcloud.com/content/repositories/releases"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = gradleWrapperVersion
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

dependencies {
  compile group: 'ro.szzsa.livescore', name: 'livescore-administration-api', version: livescoreAdministrationApiVersion
  compile group: 'ro.szzsa.livescore', name: 'livescore-management-api', version: livescoreManagementApiVersion
  compile group: 'ro.szzsa.livescore', name: 'livescore-device-api', version: livescoreDeviceApiVersion
  compile group: 'ro.szzsa.utils', name: 'converter', version: converterVersion
  compile group: 'javax.servlet', name: 'javax.servlet-api', version: javaxServletApiVersion
  compile group: 'org.springframework', name: 'spring-webmvc', version: springFrameworkVersion
  compile group: 'org.springframework', name: 'spring-context-support', version: springFrameworkVersion
  compile group: 'org.springframework', name: 'spring-jdbc', version: springFrameworkVersion
  compile group: 'org.springframework.data', name: 'spring-data-jpa', version: springDataJpaVersion
  compile group: 'javax.persistence', name: 'persistence-api', version: persistenceApiVersion
  compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: hibernateVersion
  compile group: 'org.springframework.security', name: 'spring-security-config', version: springSecurityVersion
  compile group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityVersion
  compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
  compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: jclOverSlf4jVersion
  compile group: 'mysql', name: 'mysql-connector-java', version: mysqlConnectorVersion
  testCompile group: 'junit', name: 'junit', version: junitVersion
}

configurations.all {
  exclude group: "commons-logging", module: "commons-logging"
}

war.archiveName "ROOT.war"

def nexusUrl = project.hasProperty('nexusUrl') ? nexusUrl : ''
def nexusUsername = project.hasProperty('nexusUsername') ? nexusUsername : ''
def nexusPassword = project.hasProperty('nexusPassword') ? nexusPassword : ''

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "${nexusUrl}/content/repositories/releases") {
        authentication(userName: nexusUsername, password: nexusPassword)
      }
      snapshotRepository(url: "${nexusUrl}/content/repositories/snapshots") {
        authentication(userName: nexusUsername, password: nexusPassword)
      }
    }
  }
}

release {
  failOnUnversionedFiles = false
  failOnCommitNeeded = false
}
